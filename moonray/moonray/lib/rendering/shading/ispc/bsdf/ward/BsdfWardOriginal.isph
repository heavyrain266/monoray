// Copyright 2023-2024 DreamWorks Animation LLC
// SPDX-License-Identifier: Apache-2.0

/// @file BsdfWardOriginal.isph

#include "BsdfWard.isph"

/// @class WardOriginalBsdfLobe BsdfWardOriginal.isph <rendering/shading/Bsdf/BsdfWardOriginal.isph>
/// @brief ward original bsdf lobe
struct WardOriginalBsdfLobe
{
    WARD_BSDF_LOBE;
};

varying Color
WardOriginalBsdfLobe_eval(const varying BsdfLobe * uniform lobe,
                          const varying BsdfSlice &slice,
                          const Vec3f &wi,
                          varying float * uniform pdf);

varying Color
WardOriginalBsdfLobe_sample(const varying BsdfLobe * uniform lobe,
                            const varying BsdfSlice &slice,
                            varying float r1, varying float r2,
                            varying Vec3f &wi, varying float &pdf);

/// @brief intialize a ward original lobe
inline void
WardOriginalBsdfLobe_init(varying WardOriginalBsdfLobe * uniform lobe,
                          const varying Vec3f &normal,
                          const varying Vec3f &anisoDirection,
                          const varying float roughnessU,
                          const varying float roughnessV,
                          const uniform bool squareRoughness)
{
    WardBsdfLobe_init((varying WardBsdfLobe * uniform) lobe,
                      /* name = */ BSDF_LOBE_WARD_ORIGINAL,
                      /* normal = */ normal,
                      /* anisoDirection = */ anisoDirection,
                      /* roughnessU = */ roughnessU,
                      /* roughnessV = */ roughnessV,
                      /* squareRoughness = */ squareRoughness,
                      /* evalFn = */ WardOriginalBsdfLobe_eval,
                      /* sampleFn = */ WardOriginalBsdfLobe_sample,
                      /* albedoFn = */ WardBsdfLobe_albedo,                 // Fallback to WardBsdfLobe. 
                      /* differentialsFn = */ WardBsdfLobe_differentials);  // Fallback to WardBsdfLobe. 
}

