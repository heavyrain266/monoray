Import('env')
from os import path

env.AppendUnique(ISPCFLAGS=['--wno-perf', '--woff'])

modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
name = modName + '_' + libName
# --------------------------------------------------------------------------

components = [
    'amorphous',
    'common_file_resource',
    'common_mcrt_util',
    'common_math',
    'embree',
    'oiio',
    'opensubdiv',
    'openvdb',
    'render_util',
    'rendering_bvh_shading',
    'rendering_mcrt_common',
    'rendering_shading',
    'scene_rdl2',
    'shading_eval_ispc',
    'texturing_sampler',
    'tbb'
]
env.DWAUseComponents(components)

sources = [
            'AmorphousVolume.cc',
            'Api.cc',
            'Box.cc',
            'Curves.cc',
            'Instance.cc',
            'IntersectionInit.cc',
            'InstanceProceduralLeaf.cc',
            'LocalMotionBlur.cc',
            'Points.cc',
            'PolygonMesh.cc',
            'Primitive.cc',
            'PrimitiveGroup.cc',
            'PrimitiveUserData.cc',
            'PrimitiveVisitor.cc',
            'Procedural.cc',
            'ProceduralLeaf.cc',
            'ProceduralNode.cc',
            'SharedPrimitive.cc',
            'Sphere.cc',
            'SubdivisionMesh.cc',
            'VdbVolume.cc',
            'TransformedPrimitive.cc',
            'prim/BezierSpanChains.cc',
            'prim/BSpline.cc',
            'prim/Box.cc',
            'prim/CubicSpline.cc',
            'prim/Curves.cc',
            'prim/EmissionDistribution.cc',
            'prim/GeomTLState.cc',
            'prim/Instance.cc',
            'prim/LineSegments.cc',
            'prim/Mesh.cc',
            'prim/MeshTessellationUtil.cc',
            'prim/NamedPrimitive.cc',
            'prim/OpenSubdivMesh.cc',
            'prim/Points.cc',
            'prim/PolyMesh.cc',
            'prim/PolyMeshCalcNv.cc',
            'prim/Primitive.cc',
            'prim/QuadMesh.cc',
            'prim/Sphere.cc',
            'prim/TriMesh.cc',
            'prim/Util.cc',
            'prim/AmorphousVolume.cc',
            'prim/VdbVolume.cc',
            'prim/VolumeAssignmentTable.cc',
            ]

incdir = [env.Dir('../..').srcnode(), env.Dir('./prim')]

public_headers = [
                  'AmorphousVolume.h',
                  'Api.h',
                  'Box.h',
                  'BakedAttribute.h',
                  'Curves.h',
                  'Instance.h',
                  'InstanceProceduralLeaf.h',
                  'LayerAssignmentId.h',
                  'LocalMotionBlur.h',
                  'MotionBlurParams.h',
                  'Points.h',
                  'PolygonMesh.h',
                  'Primitive.h',
                  'PrimitiveGroup.h',
                  'ProceduralContext.h',
                  'PrimitiveVisitor.h',
                  'Procedural.h',
                  'ProceduralLeaf.h',
                  'SharedPrimitive.h',
                  'Sphere.h',
                  'State.h',
                  'SubdivisionMesh.h',
                  'VdbVolume.h',
                  'TransformedPrimitive.h',
                  'Types.h',
                  'VertexBuffer.h'
                 ]

internal_public_headers = [
                  'internal/InterleavedTraits.h',
                  'internal/VertexBufferAllocator.h'
                 ]

env.DWAInstallInclude(public_headers, 'moonray/rendering/geom')
env.DWAInstallInclude(internal_public_headers, 'moonray/rendering/geom/internal')


# --------------------------------------------------------------------------
# ICC Specific Compiler Flags
ccflags = []
if 'icc' in env['CC']:
    ccflags.append('-wd177')


env.Prepend(CPPPATH=incdir, CCFLAGS=ccflags)
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)
env.DWAComponent(name, LIBS=target, CPPPATH=incdir, COMPONENTS=components)
env.DWAInstallSConscriptStub(name, LIBS=target,
                             CPPPATH=[env.Dir('$INSTALL_DIR/include'),
                                      env.Dir('$INSTALL_DIR/include/moonray')],
                             COMPONENTS=components)
env.DWALinkValidate(name)

