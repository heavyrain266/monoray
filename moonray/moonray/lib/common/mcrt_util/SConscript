Import('env')
from os import path

# extract library name from current/parent path
modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
# --------------------------------------------------------------------------
name       = modName+'_'+libName
sources    = env.DWAGlob('*.cc')
sources    += env.DWAGlob(dir='stl', pattern='*.cpp')
incdir     = [str(env.Dir('../..').srcnode())]

components = [
    'common_except',
    'random123',
    'render_util',
    'render_logging',
    'tbb'
]
# ICC Specific Compiler Flags
if 'icc' in env['CC']:
    env['CXXFLAGS'].append('-wd1684') # warning: conversion from pointer to same-sized integral type
    env['CXXFLAGS'].append('-wd2203') # warning: cast discards qualifiers from target type
    env['CXXFLAGS'].append('-wd869')  # warning: parameter was never referenced (frontend bug with variadic templates)

public_headers = [
            'Atomic.h',      # needed by general API
            'Average.h',     # needed by general API
            'ProcessStats.h',# needed by general API
            'StringPool.h', # needed by PrimitiveAttribute.h
            'StaticVector.h', # needed by Bdsf.h
]
env.DWAInstallInclude(public_headers, 'moonray/common/mcrt_util')
env.DWAUseComponents(components)
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)

env.DWAComponent(name, LIBS=target, CPPPATH=incdir, COMPONENTS=components)
env.DWAInstallSConscriptStub(name, LIBS=target,
                             CPPPATH=[env.Dir('$INSTALL_DIR/include'),
                                      env.Dir('$INSTALL_DIR/include/moonray')],
                             COMPONENTS=components)
env.Append(CPPPATH=incdir)
env.DWALinkValidate(name)
