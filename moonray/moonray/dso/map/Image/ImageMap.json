{
    "name": "ImageMap",
    "type": "Map",
    "attributes": {
        "attrWrapAround": {
            "name": "wrap_around",
            "label": "wrap around",
            "aliases": [ "wrap around" ],
            "type": "Bool",
            "default": "true",
            "comment": "If true, the image will repeat itself at it's boundries.   If false, the image will be clamped at it's boundries."
        },
        "attrTexture": {
            "name": "texture",
            "type": "String",
            "flags": "FLAGS_FILENAME",
            "comment": "Filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx). If filename contains '<UDIM>', udim index substitution is performed on filename.  In the UDIM case, 'scale', 'offset', and 'wrap around' are ignored."
        },
        "attrUseDefaultColor": {
            "name": "use_default_color_when_missing",
            "label": "use default color when missing",
            "aliases": [ "use default color when missing" ],
            "type": "Bool",
            "default": "false",
            "comment": "Uses the 'default color' for missing udims and does not report error"
        },
        "attrDefaultColor": {
            "name": "default_color",
            "label": "default color",
            "aliases": [ "default color" ],
            "type": "Rgb",
            "default": "Rgb(0.0f, 1.0f, 0.0f)",
            "comment": "Default color to be used for missing udims when 'use default color when missing' is enabled"
        },
        "attrTextureEnum": {
            "name": "texture_coordinates",
            "label": "texture coordinates",
            "aliases": [ "texture coordinates" ],
            "type": "Int",
            "default": "0",
            "flags": "FLAGS_ENUMERABLE",
            "enum": {
                "texture": "0",
                "input texture coordinates": "2",
                "hair surface": "1",
                "hair closest surface": "3"
            },
            "comment": "Selects the source of the coordinates used to map the texture.  For meshes, the 'texture' setting will read a Vec2f attribute named 'surface_st' if it exists, otherwise it will use barycentric coordinates.   For points and curves, the 'texture' setting will read a Vec2f attribute named 'uv' if it exists.   If the attribute doesn't exist, parametric st coordinates are used for curves and a constant value of (1.0, 1.0) is used for points.  The 'input texture coordinates' setting will evaluate a binding on the 'input_texture_coordinates' parameter and use the resulting red and green channels as the texture coordinates.   The 'hair surface' setting will try to read an explicit attribute named 'surface_st'.   The 'hair closest surface' setting will try to read an explicit attribute named 'closest_surface_uv'."
        },
        "attrAlphaOnly": {
            "name": "alpha_only",
            "label": "alpha only",
            "aliases": [ "alpha only" ],
            "type": "Bool",
            "default": "false",
            "comment" : "If true, the alpha channel of the texture will be placed in the rgb channels.  If the texture has no alpha channel, 1.0 is used, and the resulting texture lookup is then always white."
        },
        "attrInputTextureCoordinate": {
            "name": "input_texture_coordinates",
            "label": "input texture coordinates",
            "aliases": [ "input texture coordinates" ],
            "type": "Vec3f",
            "default": "Vec3f(0.0f, 0.0f, 0.0f)",
            "flags": "FLAGS_BINDABLE",
            "comment": "If the 'texture_coordinates' parameter is set to 'input texture coordinates' then this parameter is evaluated and the resulting red and green channels are used for the u and v coordinates respectively."
        },
        "attrMipBias": {
            "name": "mip_bias",
            "label": "mip bias",
            "type": "Float",
            "default": "0.0f",
            "flags": "FLAGS_BINDABLE",
            "group": "Blur",
            "comment": "Amount to offset derivatives which controls mipmap selection.   This can be used to provide a cheap, albiet low quality, blur.  Note: Setting this value to -1.0 effectively disables mip mapping and the highest resolution will be used."
        },
        "attrGamma": {
            "name": "gamma",
            "type": "Int",
            "default": "2",
            "flags": "FLAGS_ENUMERABLE",
            "enum": {
                "off": "0",
                "on": "1",
                "auto": "2"
            },
            "comment": "If this is set to 'on' or 'auto' and the 'texture' file is 8-bit, then a power of 2.2 will be applied to the RGB channels of the image."
        },
        "attrOffset": {
            "name": "offset",
            "type": "Vec2f",
            "default": "Vec2f(0.0f, 0.0f)",
            "comment": "A constant offset applied to the texture coordinates."
        },
        "attrScale": {
            "name": "scale",
            "type": "Vec2f",
            "default": "Vec2f(1.0f, 1.0f)",
            "comment": "A constant scale applied to the texture coordinates."
        },
        "attrRotationAngle": {
            "name": "rotation_angle",
            "label": "rotation angle",
            "aliases": [ "rotation angle" ],
            "type": "Float",
            "default": "0.0f",
            "comment": "A constant rotation in degrees applied to the texture coordinates."
        },
        "attrRotationCenter": {
            "name": "rotation_center",
            "label": "rotation center",
            "aliases": [ "rotation center" ],
            "type": "Vec2f",
            "default": "Vec2f(0.5f, 0.5f)",
            "comment": "UV coordinate around which to rotate"
        },
        "attrUDimValues": {
            "name": "udim_values",
            "label": "udim values",
            "aliases": [ "udim values" ],
            "type": "IntVector",
            "comment": "Explicit list of UDIM values corresponding to filename in the 'udim_files' list."
        },
        "attrUDimFiles": {
            "name": "udim_files",
            "label": "udim files",
            "aliases": [ "udim files" ],
            "type": "StringVector",
            "comment": "Explicit list of UDIM filenames corresponding to values in the 'udim_values' list.  If this is set, the 'texture' parameter is ignored."
        },
        "attrMaxVdim": {
            "name": "udim_max_v",
            "label": "udim max v",
            "aliases": [ "udim max v" ],
            "type": "Int",
            "default": "10",
            "comment": "Maximum UDIM v value used (maximum UDIM row). Needed to for texture allocation."
        },
        "attrSaturationEnabled": {
            "name": "saturation_enabled",
            "label": "saturation enabled",
            "aliases": [ "saturation enabled" ],
            "type": "Bool",
            "default": "false",
            "group": "Color Correction",
            "comment": "Enables 'saturation' parameter"
        },
        "attrSaturation": {
            "name": "saturation",
            "type": "Rgb",
            "default": "Rgb(1.0f, 1.0f, 1.0f)",
            "group": "Color Correction",
            "comment": "Applies saturation per channel with 0.0 being grayscale and 1.0 being full saturation"
        },
        "attrContrastEnabled": {
            "name": "contrast_enabled",
            "label": "contrast enabled",
            "aliases": [ "contrast enabled" ],
            "type": "Bool",
            "default": "false",
            "group": "Color Correction",
            "comment": "Enables 'contrast' parameter"
        },
        "attrContrast": {
            "name": "contrast",
            "type": "Rgb",
            "default": "Rgb(1.0f, 1.0f, 1.0f)",
            "group": "Color Correction",
            "comment": "Applies contrast per channel in the style of Nuke where the pivot is at 0.18"
        },
        "attrGammaEnabled": {
            "name": "gamma_enabled",
            "label": "gamma enabled",
            "aliases": [ "gamma enabled" ],
            "type": "Bool",
            "default": "false",
            "group": "Color Correction",
            "comment": "Enables 'gamma_adjust' parameter"
        },
        "attrGammaAdjust": {
            "name": "gamma_adjust",
            "label": "gamma adjust",
            "aliases": [ "gamma adjust" ],
            "type": "Rgb",
            "default": "Rgb(1.0f, 1.0f, 1.0f)",
            "group": "Color Correction",
            "comment": "Applies gamma(power fuction) per channel."
        },
        "attrGainOffsetEnabled": {
            "name": "gain_offset_enabled",
            "label": "gain offset enabled",
            "aliases": [ "gain offset enabled" ],
            "type": "Bool",
            "default": "false",
            "group": "Color Correction",
            "comment": "Enables 'gain' and 'offset_adjust' parameters"
        },
        "attrGain": {
            "name": "gain",
            "type": "Rgb",
            "default": "Rgb(1.0f, 1.0f, 1.0f)",
            "group": "Color Correction",
            "comment": "Applies multiplier per channel."
        },
        "attrOffsetAdjust": {
            "name": "offset_adjust",
            "label": "offset adjust",
            "aliases": [ "offset adjust" ],
            "type": "Rgb",
            "default": "Rgb(0.0f, 0.0f, 0.0f)",
            "group": "Color Correction",
            "comment": "Applies offset per channel."
        },
        "attrTMIControlEnabled": {
            "name": "TMI_control_enabled",
            "label": "TMI control enabled",
            "aliases": [ "TME control enabled", "TMI control enabled" ],
            "type": "Bool",
            "default": "false",
            "group": "Color Correction",
            "comment": "Enables 'TMI' (Temperature Magenta Intensity) parameter" 
        },
        "attrTMI": {
            "name": "TMI",
            "aliases": [ "TME" ],
            "type": "Vec3f",
            "display": "tmi",
            "comment": "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy ",
            "default": "Vec3f(0.0f, 0.0f, 0.0f)",
            "group": "Color Correction"
        }
    }
}
